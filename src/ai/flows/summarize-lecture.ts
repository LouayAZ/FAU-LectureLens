// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Summarizes a lecture transcript using Genkit and LLMs.
 *
 * - summarizeLectureTranscript - A function that summarizes a lecture transcript.
 * - SummarizeLectureTranscriptInput - The input type for the summarizeLectureTranscript function.
 * - SummarizeLectureTranscriptOutput - The return type for the summarizeLectureTranscript function.
 */

import {ai} from '@/ai/ai-instance';
import {googleAI} from '@genkit-ai/googleai'; // Import googleAI to reference models
import {z} from 'genkit';

const SummarizeLectureTranscriptInputSchema = z.object({
  transcript: z
    .string()
    .describe('The lecture transcript to summarize.  Must be text.'),
});
export type SummarizeLectureTranscriptInput = z.infer<
  typeof SummarizeLectureTranscriptInputSchema
>;

const SummarizeLectureTranscriptOutputSchema = z.object({
  summary: z.string().describe('A concise summary of the lecture transcript.'),
});
export type SummarizeLectureTranscriptOutput = z.infer<
  typeof SummarizeLectureTranscriptOutputSchema
>;

export async function summarizeLectureTranscript(
  input: SummarizeLectureTranscriptInput
): Promise<SummarizeLectureTranscriptOutput> {
  return summarizeLectureTranscriptFlow(input);
}

const prompt = ai.definePrompt({
  name: 'summarizeLectureTranscriptPrompt',
  model: googleAI('gemini-1.5-flash'), // Specify the model
  input: {
    schema: z.object({
      transcript: z
        .string()
        .describe('The lecture transcript to summarize.  Must be text.'),
    }),
  },
  output: {
    schema: z.object({
      summary: z.string().describe('A concise summary of the lecture transcript.'),
    }),
  },
  prompt: `You are an expert academic assistant tasked with summarizing lecture transcripts.

  Please provide a concise and informative summary of the following lecture transcript.
  The summary should focus on the key concepts, main ideas, and important details discussed in the lecture.
  Aim for a summary that is about 20% to 30% the length of the original transcript.  The user is a student and needs to use this summary to study for an exam.

  Transcript: {{{transcript}}}
  `,
});

const summarizeLectureTranscriptFlow = ai.defineFlow<
  typeof SummarizeLectureTranscriptInputSchema,
  typeof SummarizeLectureTranscriptOutputSchema
>({
  name: 'summarizeLectureTranscriptFlow',
  inputSchema: SummarizeLectureTranscriptInputSchema,
  outputSchema: SummarizeLectureTranscriptOutputSchema,
},
async input => {
  const {output} = await prompt(input);
  return output!;
});

